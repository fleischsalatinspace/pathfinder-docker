version: '2.4'

services:
    db:
      container_name: pathfinder_db_dev
      extends:
        file: docker-compose-base.yml
        service: db
      environment:
        MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWORD}"
        MYSQL_USER: "${MYSQL_USER}"
      volumes:
              ##TODO: mysql docker image logs to sdout, so where do we get logs?
              - database-dev:/var/lib/mysql

    pathfinder:
      container_name: pathfinder_app_dev
      extends:
        file: docker-compose-base.yml
        service: pathfinder
      env_file: .env.dev
      depends_on:
        - db
      volumes:
          - app-logs-dev:/var/www/pathfinder/logs/
          - app-logs-nginx-dev:/var/log/nginx/
            #TODO: dont want to mount complete /var/log, so lets disable it for now
            #- app-logs-php-dev:/var/log/php7.2-fpm.log
          - app-logs-redis-dev:/var/log/redis/
          - app-logs-cron-dev:/var/log/cron-www/

    caddy:
      container_name: pathfinder_caddy_dev
      extends:
        file: docker-compose-base.yml
        service: caddy
      ports: 
        - "127.0.0.1:443:443"
      #TODO: create caddy-alpine based image with entrypoint to replace vhost config in caddy configfile
      #TODO: also log access-logs to sdout to replace the bind mount caddy-logs-dev
      volumes:
              - ./config/Caddyfile-dev:/etc/caddy/Caddyfile
              - caddy-data-dev:/data
              - caddy-config-dev:/config
              - caddy-logs-dev:/var/log/



#TODO: for whatever reason volumes declaration has to be included here, not in docker-compose-base.yml file
volumes:
    database-dev: {}
    caddy-data-dev: {}
    caddy-config-dev: {}
    app-logs-dev: {}
    app-logs-nginx-dev: {}
    #app-logs-php-dev: {}
    app-logs-redis-dev: {}
    app-logs-cron-dev: {}
    caddy-logs-dev: {}
